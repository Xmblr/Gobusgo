imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@GobusgoGobusgoBundle/Resources/config/services.yml" }
    - { resource: "@GobusgoGobusgoBundle/Resources/config/config.yml" }
    - { resource: sonata_news.yml }

#    - { resource: sonata_formatter.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: ru


framework:
    #esi: ~
    translator: { fallbacks: ["%locale%"] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

    form_themes:
        - '@SonataFormatter/Form/formatter.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        entity_managers:
            default:
               naming_strategy: doctrine.orm.naming_strategy.underscore
               auto_mapping: true
               mappings:
                   SonataMediaBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    port: '%mailer_port%'
    encryption: '%mailer_encryption%'
    spool: { type: memory }

fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: Gobusgo\GobusgoBundle\Entity\User
    service:
        mailer: fos_user.mailer.twig_swift
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"
    registration:
        form:
            type: Gobusgo\GobusgoBundle\Form\RegistrationType
        confirmation:
            enabled: true
    profile:
        form:
            type: Gobusgo\GobusgoBundle\Form\ProfileFormType
    group:
        group_class: Gobusgo\GobusgoBundle\Entity\Group


sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text:
        sonata.block.service.user: ~
        sonata.block.service.order:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]

# Assetic Configuration
assetic:
    bundles:        [GobusgoGobusgoBundle]
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'

    filters:
        cssrewrite: ~
    assets:
        bootstrap_js:
            inputs:
                - "%kernel.root_dir%/../vendor/twitter/bootstrap/dist/js/bootstrap.js"
        bootstrap_css:
            inputs:
                - "%kernel.root_dir%/../vendor/twitter/bootstrap/dist/css/bootstrap.css"
                - "%kernel.root_dir%/../vendor/twitter/bootstrap/dist/css/bootstrap-theme.css"
            filters: [cssrewrite]

        bootstrap_glyphicons_ttf:
            inputs:
                - "%kernel.root_dir%/../vendor/twitter/bootstrap/dist/fonts/glyphicons-halflings-regular.ttf"
            output: "fonts/glyphicons-halflings-regular.ttf"
        bootstrap_glyphicons_eot:
            inputs:
                - "%kernel.root_dir%/../vendor/twitter/bootstrap/dist/fonts/glyphicons-halflings-regular.eot"
            output: "fonts/glyphicons-halflings-regular.eot"
        bootstrap_glyphicons_svg:
            inputs:
                - "%kernel.root_dir%/../vendor/twitter/bootstrap/dist/fonts/glyphicons-halflings-regular.svg"
            output: "fonts/glyphicons-halflings-regular.svg"
        bootstrap_glyphicons_woff:
            inputs:
                - "%kernel.root_dir%/../vendor/twitter/bootstrap/dist/fonts/glyphicons-halflings-regular.woff"
            output: "fonts/glyphicons-halflings-regular.woff"

        jquery:
            inputs:
                - "%kernel.root_dir%/../vendor/components/jquery/jquery.js"

sonata_admin:
    assets:
        extra_javascripts:
            # ...
            - bundles/ivoryckeditor/ckeditor.js
            - bundles/sonataformatter/vendor/markitup-markitup/markitup/jquery.markitup.js
            - bundles/sonataformatter/markitup/sets/markdown/set.js
            - bundles/sonataformatter/markitup/sets/html/set.js
            - bundles/sonataformatter/markitup/sets/textile/set.js

        extra_stylesheets:
            # ...
            - bundles/sonataformatter/markitup/skins/sonata/style.css
            - bundles/sonataformatter/markitup/sets/markdown/style.css
            - bundles/sonataformatter/markitup/sets/html/style.css
            - bundles/sonataformatter/markitup/sets/textile/style.css
    security:
        handler: sonata.admin.security.handler.role
    dashboard:
        groups:
            app.admin.group.admin:
                label: Администратор
                roles: [ ROLE_ADMIN ]
            app.admin.group.moderator:
                label: Новости
                roles: [ ROLE_ADMIN, ROLE_MODERATOR ]


#            app.admin.group.user:
#                label: Пользователь
#                roles: [ ROLE_USER, ROLE_ADMIN ]

        blocks:
#            - { position: center,type: sonata.block.service.text, settings: { content: '<h2>HELLO WORLD!</h2>' } }
            - { position: left, type: sonata.block.service.user }
            - { position: right, type: sonata.block.service.order }
#            - { position: right, type: sonata.admin.block.admin_list }
    title:      GoBusGo
    title_logo: favicon.ico
    templates:
        layout:                         "@GobusgoGobusgo/Admin/standard_layout.html.twig"
        ajax:                           "@GobusgoGobusgo/Admin/ajax_layout.html.twig"
        list:                           "@GobusgoGobusgo/Admin/CRUD/list.html.twig"
        show:                           "@GobusgoGobusgo/Admin/CRUD/show.html.twig"
        show_compare:                   "@GobusgoGobusgo/Admin/CRUD/show_compare.html.twig"
        edit:                           "@GobusgoGobusgo/Admin/CRUD/edit.html.twig"
        history:                        "@GobusgoGobusgo/Admin/CRUD/history.html.twig"
        preview:                        "@GobusgoGobusgo/Admin/CRUD/preview.html.twig"
        delete:                         "@GobusgoGobusgo/Admin/CRUD/delete.html.twig"
        batch:                          "@GobusgoGobusgo/Admin/CRUD/list__batch.html.twig"
        acl:                            "@GobusgoGobusgo/Admin/CRUD/acl.html.twig"
        action:                         "@GobusgoGobusgo/Admin/CRUD/action.html.twig"
        select:                         "@GobusgoGobusgo/Admin/CRUD/list__select.html.twig"
        filter:                         "@GobusgoGobusgo/Admin/Form/filter_admin_fields.html.twig"
        dashboard:                      "@GobusgoGobusgo/Admin/Core/dashboard.html.twig"
        search:                         "@GobusgoGobusgo/Admin/Core/search.html.twig"
        batch_confirmation:             "@GobusgoGobusgo/Admin/CRUD/batch_confirmation.html.twig"
        inner_list_row:                 "@GobusgoGobusgo/Admin/CRUD/list_inner_row.html.twig"
        base_list_field:                "@GobusgoGobusgo/Admin/CRUD/base_list_field.html.twig"
        list_block:                     "@GobusgoGobusgo/Admin/Block/block_admin_list.html.twig"
        user_block:                     "@GobusgoGobusgo/Admin/Core/user_block.html.twig"
        add_block:                      "@GobusgoGobusgo/Admin/Core/add_block.html.twig"
        pager_links:                    "@GobusgoGobusgo/Admin/Pager/links.html.twig"
        pager_results:                  "@GobusgoGobusgo/Admin/Pager/results.html.twig"
        tab_menu_template:              "@GobusgoGobusgo/Admin/Core/tab_menu_template.html.twig"
        history_revision_timestamp:     "@GobusgoGobusgo/Admin/CRUD/history_revision_timestamp.html.twig"
        short_object_description:       "@GobusgoGobusgo/Admin/Helper/short-object-description.html.twig"
        search_result_block:            "@GobusgoGobusgo/Admin/Block/block_search_result.html.twig"
        action_create:                  "@GobusgoGobusgo/Admin/CRUD/dashboard__action_create.html.twig"
        button_acl:                     "@GobusgoGobusgo/Admin/Button/acl_button.html.twig"
        button_create:                  "@GobusgoGobusgo/Admin/Button/create_button.html.twig"
        button_edit:                    "@GobusgoGobusgo/Admin/Button/edit_button.html.twig"
        button_history:                 "@GobusgoGobusgo/Admin/Button/history_button.html.twig"
        button_list:                    "@GobusgoGobusgo/Admin/Button/list_button.html.twig"
        button_show:                    "@GobusgoGobusgo/Admin/Button/show_button.html.twig"


sonata_seo:
    encoding:         UTF-8
    page:
        title:            GObusGO
        default:          sonata.seo.page.default
        metas:
            name:
                keywords:             foo bar
                description:          The description
                robots:               index, follow

            property:
                # Facebook application settings
                #'fb:app_id':          XXXXXX
                #'fb:admins':          admin1, admin2

                # Open Graph information
                # see http://developers.facebook.com/docs/opengraphprotocol/#types or http://ogp.me/
                'og:site_name':       GobusGo
                #'og:description':     A demo of the some rich bundles for your Symfony2 projects

            http-equiv:
                'Content-Type':         text/html; charset=utf-8
                #'X-Ua-Compatible':      IE=EmulateIE7

            charset:
                UTF-8:    ''

        head:
            'xmlns':              http://www.w3.org/1999/xhtml
            'xmlns:og':           http://opengraphprotocol.org/schema/
            #'xmlns:fb':           "http://www.facebook.com/2008/fbml"

sonata_media:
    # if you don't use default namespace configuration
    class:
        media: Application\Sonata\MediaBundle\Entity\Media
        gallery: Application\Sonata\MediaBundle\Entity\Gallery
        gallery_has_media: Application\Sonata\MediaBundle\Entity\GalleryHasMedia
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr it is mandatory to choose one here
    default_context: default # you need to set a context
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

        news:
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 150 , quality: 95}
                big:   { width: 500 , quality: 90}
                wide:  { width: 500 , quality: 90}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
#            directory:  "%kernel.root_dir%/../public/uploads/media" #flex
            directory:  "%kernel.root_dir%/../web/uploads/media" #non-flex
            create:     false

sonata_user:
    class:
        user: Application\Sonata\UserBundle\Entity\User
        group: Application\Sonata\UserBundle\Entity\Group
#    admin:            # Admin Classes
#        user:
#            class:    Application\Sonata\UserBundle\Admin\Model\UserAdmin
#        group:
#            class:    Application\Sonata\UserBundle\Admin\Model\GroupAdmin


knp_menu:
    # use "twig: false" to disable the Twig extension and the TwigRenderer
    twig:
        template: KnpMenuBundle::menu.html.twig
    #  if true, enables the helper for PHP templates
    templating: false
    # the renderer to use, list is also available by default
    default_renderer: twig

sonata_formatter:
    default_formatter: text
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig #keep this commented unless you are using media bundle.


        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig


        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig


        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig


        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions

sonata_classification:
    class:
        collection:     Application\Sonata\ClassificationBundle\Entity\Collection
        tag:            Application\Sonata\ClassificationBundle\Entity\Tag
        category:       Application\Sonata\ClassificationBundle\Entity\Category

sonata_news:
    title:        Sonata Project
    link:         https://sonata-project.org
    description:  Cool bundles on top of Symfony2
    salt:         'secureToken'
    permalink_generator: sonata.news.permalink.date # sonata.news.permalink.collection
    permalink:
        date:     '%%1$04d/%%2$02d/%%3$02d/%%4$s' # => 2012/02/01/slug
    comment:
        notification:
            emails:   [email@example.org, email2@example.org]
            from:     no-reply@sonata-project.org
            template: '@SonataNews/Mail/comment_notification.txt.twig'

    class:
        post:       Application\Sonata\NewsBundle\Entity\Post
        comment:    Application\Sonata\NewsBundle\Entity\Comment
        media:      Application\Sonata\MediaBundle\Entity\Media
        user:       Application\Sonata\UserBundle\Entity\User

    admin:
        post:
            class:       Sonata\NewsBundle\Admin\PostAdmin
            controller:  SonataAdminBundle:CRUD
            translation: SonataNewsBundle
        comment:
            class:       Sonata\NewsBundle\Admin\CommentAdmin
            controller:  SonataNewsBundle:CommentAdmin
            translation: SonataNewsBundle
#        collection:
#            class:       Sonata\NewsBundle\Admin\CollectionAdmin
#            controller:  SonataAdminBundle:CRUD
#            translation: SonataNewsBundle
#        tag:
#            class:       Sonata\NewsBundle\Admin\TagAdmin
#            controller:  SonataAdminBundle:CRUD
#            translation: SonataNewsBundle

ivory_ck_editor:
    default_config: news
    configs:
        news:
            # default toolbar plus Format button
            toolbar:
            - [Bold, Italic, Underline, -, Cut, Copy, Paste, PasteText, PasteFromWord, -, Undo, Redo, -, NumberedList, BulletedList, -, Outdent, Indent, -, Blockquote, -, Image, Link, Unlink, Table]
            - [Format, Maximize, Source]

            filebrowserBrowseRoute: admin_sonata_media_media_ckeditor_browser
            filebrowserImageBrowseRoute: admin_sonata_media_media_ckeditor_browser
            # Display images by default when clicking the image dialog browse button
            filebrowserImageBrowseRouteParameters:
                provider: sonata.media.provider.image
            filebrowserUploadRoute: admin_sonata_media_media_ckeditor_upload
            filebrowserUploadRouteParameters:
                provider: sonata.media.provider.file
            # Upload file as image when sending a file from the image dialog
            filebrowserImageUploadRoute: admin_sonata_media_media_ckeditor_upload
            filebrowserImageUploadRouteParameters:
                provider: sonata.media.provider.image
                context: my-context # Optional, to upload in a custom context
                format: my-big # Optional, media format or original size returned to editor