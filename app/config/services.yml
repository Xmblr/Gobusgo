# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

#   --------------------------- Admin controllers ----------------------------------
    admin.users:
        class: Gobusgo\GobusgoBundle\Admin\UserAdmin
        arguments: [~, Gobusgo\GobusgoBundle\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Пользователи , group: "app.admin.group.admin" }
        public: true

    admin.news:
        class: Sonata\NewsBundle\Admin\PostAdmin
        arguments: [~, Application\Sonata\NewsBundle\Entity\Post, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Новости , group: "app.admin.group.moderator" }
        public: true

    admin.comment:
        class: Sonata\NewsBundle\Admin\CommentAdmin
        arguments: [~, Application\Sonata\NewsBundle\Entity\Comment, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Комментарии , group: "app.admin.group.moderator" }
        public: true

    admin.city:
        class: Gobusgo\GobusgoBundle\Admin\CityAdmin
        arguments: [~, Gobusgo\GobusgoBundle\Entity\City, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Города , group: "app.admin.group.admin" }
        public: true

    admin.address:
        class: Gobusgo\GobusgoBundle\Admin\AddressAdmin
        arguments: [~, Gobusgo\GobusgoBundle\Entity\Address, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Адреса , group: "app.admin.group.admin" }
        public: true

    admin.user.address:
        class: Gobusgo\GobusgoBundle\Admin\AddressUserAdmin
        arguments: [~, Gobusgo\GobusgoBundle\Entity\Address, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Шаблоны адресов, group: "admin.user.address" }
        public: true

    admin.cargo:
        class: Gobusgo\GobusgoBundle\Admin\CargoAdmin
        arguments: [~, Gobusgo\GobusgoBundle\Entity\Cargo, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Груз , group: "app.admin.group.admin" }
        public: true

    admin.user.cargo:
        class: Gobusgo\GobusgoBundle\Admin\CargoUserAdmin
        arguments: [~, Gobusgo\GobusgoBundle\Entity\Cargo, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Шаблоны грузов, group: "admin.user.cargo" }
        public: true

    admin.order:
        class: Gobusgo\GobusgoBundle\Admin\OrderAdmin
        arguments: [~, Gobusgo\GobusgoBundle\Entity\Order, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Заказ , group: "app.admin.group.admin" }
        public: true

    admin.user.order:
        class: Gobusgo\GobusgoBundle\Admin\OrderUserAdmin
        arguments: [~, Gobusgo\GobusgoBundle\Entity\Order, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: История грузоперевозок, group: "admin.user.order" }
        public: true

    sonata.block.service.order:
        class: Gobusgo\GobusgoBundle\Block\OrderBlockService
        arguments: [ sonata.block.service.order, "@templating", "@doctrine.orm.entity_manager" ]
        tags:
            - { name: sonata.block }

    sonata.block.service.user:
        class: Gobusgo\GobusgoBundle\Block\UserBlockService
        arguments: [ sonata.block.service.user, "@templating" ]
        tags:
            - { name: sonata.block }
#   --------------------------- Admin controllers ----------------------------------





#   --------------------------- Form builders ----------------------------------
    app.form.registration:
        class: Gobusgo\GobusgoBundle\Form\RegistrationType
        tags:
            - { name: form.type, alias: app_user_registration }


    app.form.profile:
        class: Gobusgo\GobusgoBundle\Form\ProfileFormType
        tags:
            - { name: form.type, alias: app_user_profile }

#    sonata.block.service.infouser:
#        class: Gobusgo\GobusgoBundl\Block\UserInfoBlockService
#        arguments: { name: "sonata.block.service.infouser"}
#        tags:
#            - { name: sonata.block}


#   --------------------------- Form builders ----------------------------------


#        GobusgoGobusgoBundle
    # makes classes in src/GobusgoBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
#    GobusgoBundle\:
#        resource: '../../src/GobusgoBundle/*'
#        # you can exclude directories or files
#        # but if a service is unused, it's removed anyway
#        exclude: '../../src/GobusgoBundle/{Entity,Repository,Tests}'
#
#    # controllers are imported separately to make sure they're public
#    # and have a tag that allows actions to type-hint services
#    GobusgoBundle\Controller\:
#        resource: '../../src/GobusgoBundle/Controller'
#        public: true
#        tags: ['controller.service_arguments']
#
#    GobusgoBundle\Resources\:
#        resource: '../../src/GobusgoBundle/Resources'
#        public: true
#        tags: ['twig.extension']
    # add more services, or override services that need manual wiring
    # GobusgoBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
